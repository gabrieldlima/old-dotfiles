# ╔═══════════════════════════════════════════════════════════════════╗
# ║██╗  ██╗██╗   ██╗██████╗ ██████╗ ██╗      █████╗ ███╗   ██╗██████╗ ║
# ║██║  ██║╚██╗ ██╔╝██╔══██╗██╔══██╗██║     ██╔══██╗████╗  ██║██╔══██╗║
# ║███████║ ╚████╔╝ ██████╔╝██████╔╝██║     ███████║██╔██╗ ██║██║  ██║║
# ║██╔══██║  ╚██╔╝  ██╔═══╝ ██╔══██╗██║     ██╔══██║██║╚██╗██║██║  ██║║
# ║██║  ██║   ██║   ██║     ██║  ██║███████╗██║  ██║██║ ╚████║██████╔╝║
# ║╚═╝  ╚═╝   ╚═╝   ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝ ║
# ╚═══════════════════════════════════════════════════════════════════╝

###############################################################################
# Imports
###############################################################################
# Source a file (multi-file configs)
source = ~/.config/hypr/theme.conf


###############################################################################
# Monitors
###############################################################################
monitor=HDMI-A-2,1920x1080@60,0x0,1


# will execute only on launch
exec-once = hyprpaper
# will execute on each reload
exec =

# Some default env vars.
env = XCURSOR_SIZE,24


###############################################################################
# Variables
###############################################################################
$browser  = qutebrowser
$launcher = wofi --show drun
$terminal = wezterm


###############################################################################
# General
###############################################################################
general {
    # size of the border around windows
    border_size = 2
    # disable borders for floating windows
    no_border_on_floating = false
    # gaps between windows
    gaps_in = 5
    # gaps between windows and monitor edges
    gaps_out = 20
    # border color for the active window
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    # border color for inactive windows
    col.inactive_border = rgba(595959aa)
    # in seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never.
    cursor_inactive_timeout = 0
    # which layout to use. (Available: dwindle, master)
    layout = master
    # if true, will not warp the cursor in many cases (focusing, keybinds, etc)
    no_cursor_warps = false
    # if on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games) NOTICE: really not recommended.
    apply_sens_to_raw = false
    # enables resizing windows by clicking and dragging on borders and gaps
    resize_on_border = false
    # extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.
    extend_border_grab_area = 15
    # show a cursor icon when hovering over borders, only used when general:resize_on_border is on.
    hover_icon_on_border = true
    # master switch for allowing tearing to occur
    allow_tearing = false
}

###############################################################################
# Decoration
###############################################################################
decoration {
    # rounded corners’ radius (in layout px)
    rounding = 10
    # opacity of active windows. (0.0 - 1.0)
    active_opacity = 1.0
    # opacity of inactive windows. (0.0 - 1.0)
    inactive_opacity = 1.0
    # opacity of fullscreen windows. (0.0 - 1.0)
    fullscreen_opacity = 1.0
    # enable drop shadows on windows
    drop_shadow = true
    # Shadow range (“size”) in layout px
    shadow_range = 4
    # (1 - 4), in what power to render the falloff (more power, the faster the falloff)
    shadow_render_power = 3
    # if true, the shadow will not be rendered behind the window itself, only around it.
    shadow_ignore_window = true
    # shadow’s color. Alpha dictates shadow’s opacity.
    col.shadow = rgba(1a1a1aee)
    # shadow’s rendering offset.
    shadow_offset = [0, 0]
    # shadow’s scale. 0.0 - 1.0
    shadow_scale = 1.0
    # enables dimming of inactive windows
    dim_inactive = false
    # how much inactive windows should be dimmed, 0.0 - 1.0
    dim_strength = 0.5
    # how much to dim the rest of the screen by when a special workspace is open. 0.0 - 1.0
    dim_special = 0.2
    # how much the dimaround window rule should dim by. 0.0 - 1.0
    dim_around = 0.4
    # a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.
    screen_shader =

    blur {
        # enable kawase window background blur
        enabled = true
        # blur size (distance)
        size = 3
        # the amount of passes to perform
        passes = 1
        # make the blur layer ignore the opacity of the window
        ignore_opacity = false
        # whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.
        new_optimizations = true
        # if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.
        xray = true
        # how much noise to apply. 0.0 - 1.0
        noise = 0.0117
        # contrast modulation for blur. 0.0 - 2.0
        contrast = 0.8916
        # brightness modulation for blur. 0.0 - 2.0
        brightness = 0.8172
        # whether to blur behind the special workspace (note: expensive)
        special = false
    }
}


###############################################################################
# Animations
###############################################################################
animations {
    # enable animations
    enabled = true
    # Defining your own Bezier curve can be done with the bezier keyword
    # - https://www.cssportal.com/css-cubic-bezier-generator/
    # - https://easings.net/
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    # Animations are declared with the animation keyword
    # animation = NAME, ONOFF, SPEED, CURVE, STYLE
    # - NAME:
        # ↳ global
            # ↳ windows - styles: slide, popin
                # ↳ windowsIn - window open
                # ↳ windowsOut - window close
                # ↳ windowsMove - everything in between, moving, dragging, resizing.
        # ↳ fade
            # ↳ fadeIn - fade in (open) -> layers and windows
            # ↳ fadeOut - fade out (close) -> layers and windows
            # ↳ fadeSwitch - fade on changing activewindow and its opacity
            # ↳ fadeShadow - fade on changing activewindow for shadows
            # ↳ fadeDim - the easing of the dimming of inactive windows
        # ↳ border - for animating the border's color switch speed
        # ↳ borderangle - for animating the border's gradient angle - styles: once (default), loop
        # ↳ workspaces - styles: slide, slidevert, fade, slidefade, slidefadevert
        # ↳ specialWorkspace - styles: same as workspaces
    # - ONOFF: can be either 0 or 1, 0 to disable, 1 to enable. note: if it’s 0, you can omit further args.
    # - SPEED: is the amount of ds (1ds = 100ms) the animation will take
    # - CURVE: is the bezier curve name
    # - STYLE: (optional) is the animation style
    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}


###############################################################################
# Input
###############################################################################
input {
    # Appropriate XKB keymap parameter
    kb_model =
    kb_layout = us
    kb_variant =
    kb_options =
    kb_rules =
    # If you prefer, you can use a path to your custom .xkb file
    kb_file =
    # Engage numlock by default.
    numlock_by_default = false
    # The repeat rate for held-down keys, in repeats per seconds
    repeat_rate = 25
    # Delay before a held-down key is repeated, in milliseconds
    repeat_delay = 600
    # Sets the mouse input sensitivity. Value will be clamped to the range -1.0 to 1.0
    # https://wayland.freedesktop.org/libinput/doc/latest/pointer-acceleration.html#pointer-acceleration
    sensitivity = 0
    # Sets the cursor acceleration profile. Can be one of adaptive, flat. Can also be custom, see below. Leave empty to use libinput’s default mode for your input device
    # https://wayland.freedesktop.org/libinput/doc/latest/pointer-acceleration.html#pointer-acceleration
    accel_profile =
    # Force no cursor acceleration. This bypasses most of your pointer settings to get as raw of a signal as possible. Enabling this is not recommended due to potential cursor desynchronization
    force_no_accel = false
    # Switches RMB and LMB
    left_handed = false
    # Sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll
    # https://wayland.freedesktop.org/libinput/doc/latest/scrolling.html
    scroll_method =
    # Sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default
    scroll_button = 0
    # If the scroll button lock is enabled, the button does not need to be held down. Pressing and releasing the button once enables the button lock, the button is now considered logically held down. Pressing and releasing the button a second time logically releases the button. While the button is logically held down, motion events are converted to scroll events
    scroll_button_lock = false
    # Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar
    natural_scroll = false
    # (0/1/2/3) Specify if and how cursor movement should affect window focus. See the note below
    # - 0: Cursor movement will not change focus.
    # - 1: Cursor movement will always change focus to the window under the cursor.
    # - 2: Cursor focus will be detached from keyboard focus. Clicking on a window will move keyboard focus to that window.
    # - 3: Cursor focus will be completely separate from keyboard focus. Clicking on a window will not change keyboard focus.
    follow_mouse = 1
    # If disabled and follow_mouse=1 then mouse focus will not switch to the hovered window unless the mouse crosses a window boundary
    mouse_refocus = true
    # If enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches
    float_switch_override_focus = 1
}


###############################################################################
# Gestures
###############################################################################
gestures {
    # enable workspace swipe gesture
    workspace_swipe = false
}


###############################################################################
# Misc
###############################################################################
misc {
    # disables the random hyprland logo / anime girl background
    disable_hyprland_logo = false
    # disables the hyprland splash rendering. (requires a monitor reload to take effect)
    disable_splash_rendering = false
    # makes the background always have hypr-chan, the hyprland mascot
    force_hypr_chan = false
    # Enforce any of the 3 default wallpapers. Setting this to 0 disables the anime background. -1 means “random”
    force_default_wallpaper = -1
    # controls the VFR status of hyprland. Heavily recommended to leave on true to conserve resources
    vfr = true
    # controls the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only
    vrr = 0
    # If DPMS is set to off, wake up the monitors if the mouse moves
    mouse_move_enables_dpms = false
    # If DPMS is set to off, wake up the monitors if a key is pressed
    key_press_enables_dpms = false
    # Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0
    always_follow_on_dnd = true
    # If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)
    layers_hog_keyboard_focus = true
    # If true, will animate manual window resizes/moves
    animate_manual_resizes = false
    # If true, will animate windows being dragged by mouse, note that this can cause weird behavior on some curves
    animate_mouse_windowdragging = false
    # If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.
    disable_autoreload = false
    # Enable window swallowing
    enable_swallow = false
    # The class regex to be used for windows that should be swallowed (usually, a terminal). To know more about the list of regex which can be used use this cheatsheet:
    # https://github.com/ziishaned/learn-regex/blob/master/README.md
    swallow_regex =
    # The title regex to be used for windows that should not be swallowed by the windows specified in swallow_regex (e.g. wev). The regex is matched against the parent (e.g. Kitty) window’s title on the assumption that it changes to whatever process it’s running
    swallow_exception_regex =
    # Whether Hyprland should focus an app that requests to be focused (an activate request)
    focus_on_activate = false
    # Disables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game). It is also recommended to set this to true if the fullscreen application shows graphical glitches
    no_direct_scanout = true
    # Hides the cursor when the last input was a touch input until a mouse input is done
    hide_cursor_on_touch = true
    # Whether mouse moving into a different monitor should focus it
    mouse_move_focuses_monitor = true
    # [Warning: buggy] starts rendering before your monitor displays a frame in order to lower latency
    render_ahead_of_time = false
    # how many ms of safezone to add to rendering ahead of time. Recommended 1-2.
    render_ahead_safezone = 1
    # the factor to zoom by around the cursor. AKA. Magnifying glass. Minimum 1.0 (meaning no zoom)
    cursor_zoom_factor = 1.0
    # whether the zoom should follow the cursor rigidly (cursor is always centered if it can be) or loosely
    cursor_zoom_rigid = false
    # if true, will allow you to restart a lockscreen app in case it crashes (red screen of death)
    allow_session_lock_restore = false
    # change the background color. (requires enabled disable_hyprland_logo)
    background_color = 0x111111
    # close the special workspace if the last window is removed
    close_special_on_empty = true
    # if there is a fullscreen window, whether a new tiled window opened should replace the fullscreen one or stay behind. 0 - behind, 1 - takes over, 2 - unfullscreen the current fullscreen window
    new_window_takes_over_fullscreen = 0
}


###############################################################################
# XWayland
###############################################################################
xwayland {
    # uses the nearest neigbor filtering for xwayland apps, making them pixelated rather than blurry
    use_nearest_neighbor = true
    # forces a scale of 1 on xwayland windows on scaled displays.
    force_zero_scaling = false
}


###############################################################################
# Master layout
###############################################################################
master {
    # enable adding additional master windows in a horizontal split style
    allow_small_split = false
    # (0.0 - 1.0) the scale of the special workspace windows
    special_scale_factor = 0.5
    # (0.0 - 1.0) master split factor, the ratio of master split
    mfact = 0.5
    # whether a newly open window should replace the master or join the slaves.
    new_is_master = true
    # whether a newly open window should be on the top of the stack
    new_on_top = false
    # whether to apply gaps when there is only one window on a workspace, aka. smart gaps. (default: disabled - 0) no border - 1, with border - 2
    no_gaps_when_only = 0
    # default placement of the master area, can be left, right, top, bottom or center
    orientation = left
    # inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)
    inherit_fullscreen = true
    # when using orientation=center, keep the master window centered, even when it is the only window in the workspace.
    always_center_master = false
    # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position.
    smart_resizing = true
    # when enabled, dragging and dropping windows will put them at the cursor position. Otherwise, when dropped at the stack side, they will go to the top/bottom of the stack depending on new_on_top.
    drop_at_cursor = true
}


###############################################################################
# Binds
###############################################################################
binds {
   # if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered.
   pass_mouse_when_bound = false
   # in ms, how many ms to wait after a scroll event to allow to pass another one for the binds.
   scroll_event_delay = 300
   # If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth.
   workspace_back_and_forth = false
   # If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace.
   allow_workspace_cycles = false
   # Whether switching workspaces should center the cursor on the workspace (0) or on the last active window for that workspace (1)
   workspace_center_on = 0
   # sets the preferred focus finding method when using focuswindow/movewindow/etc with a direction. 0 - history (recent have priority), 1 - length (longer shared edges have priority)
   focus_preferred_method = 0
   # If enabled, dispatchers like moveintogroup, moveoutofgroup and movewindoworgroup will ignore lock per group.
   ignore_group_lock = false
}

# Set the modKey
$modKey = SUPER

bind = $modKey, RETURN, exec, $terminal
bind = $modKey, B,      exec, $browser
bind = $modKey, P,      exec, $launcher

# closes (not kills) the active window
bind = $modKey SHIFT, C,     killactive
# exits the compositor with no questions asked.
bind = $modKey SHIFT, Q,     exit
# toggles the focused window’s fullscreen state
bind = $modKey,       F,     fullscreen
# toggles the current window’s floating state
bind = $modKey,       SPACE, togglefloating
# center the active window note: floating only
bind = $modKey SHIFT, SPACE, centerwindow

# Move focus with $modKey + hjkl
bind = $modKey, h, movefocus, l
bind = $modKey, l, movefocus, r
bind = $modKey, k, movefocus, u
bind = $modKey, j, movefocus, d

# Move windows with $modKey + SHIFT + hjkl
bind = $modKey SHIFT, h, movewindow, l
bind = $modKey SHIFT, l, movewindow, r
bind = $modKey SHIFT, k, movewindow, u
bind = $modKey SHIFT, j, movewindow, d

# Resize windows with $modKey + ALT + hjkl
bind = $modKey ALT, h, resizeactive, -50 0
bind = $modKey ALT, l, resizeactive, 50 0
bind = $modKey ALT, k, resizeactive, 0 -50
bind = $modKey ALT, j, resizeactive, 0 50

# swaps the current window with master. If the current window is the master, swaps it with the first child.
bind = $modKey SHIFT, RETURN, layoutmsg, swapwithmaster

# Switch workspaces with modKey + [0-9]
bind = $modKey, 1, workspace, 1
bind = $modKey, 2, workspace, 2
bind = $modKey, 3, workspace, 3
bind = $modKey, 4, workspace, 4
bind = $modKey, 5, workspace, 5
bind = $modKey, 6, workspace, 6
bind = $modKey, 7, workspace, 7
bind = $modKey, 8, workspace, 8
bind = $modKey, 9, workspace, 9
bind = $modKey, 0, workspace, 10

# Move active window to a workspace with modKey + SHIFT + [0-9]
bind = $modKey SHIFT, 1, movetoworkspacesilent, 1
bind = $modKey SHIFT, 2, movetoworkspacesilent, 2
bind = $modKey SHIFT, 3, movetoworkspacesilent, 3
bind = $modKey SHIFT, 4, movetoworkspacesilent, 4
bind = $modKey SHIFT, 5, movetoworkspacesilent, 5
bind = $modKey SHIFT, 6, movetoworkspacesilent, 6
bind = $modKey SHIFT, 7, movetoworkspacesilent, 7
bind = $modKey SHIFT, 8, movetoworkspacesilent, 8
bind = $modKey SHIFT, 9, movetoworkspacesilent, 9
bind = $modKey SHIFT, 0, movetoworkspacesilent, 10

# Change focus to another window, bring it to the top
bind = $modKey, Tab, cyclenext
bind = $modKey, Tab, bringactivetotop
bind = $modKey SHIFT, Tab, cyclenext, prev
bind = $modKey SHIFT, Tab, bringactivetotop

# Move/resize windows with modKey + LMB/RMB and dragging
bindm = $modKey, mouse:272, movewindow
bindm = $modKey, mouse:273, resizewindow

# Scroll through workspaces with $modKey + mouse sideup/sidedown
bind = $modKey, mouse:276, workspace, +1
bind = $modKey, mouse:275, workspace, -1

# Scroll through existing workspaces with $modKey + scroll
bind = $modKey, mouse_down, workspace, e+1
bind = $modKey, mouse_up, workspace, e-1
