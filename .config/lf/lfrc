# =============================================================================
#                                  OPTIONS
# =============================================================================

# interpreter for shell commands
set shell sh

# enable drawbow
set drawbox

# enable icons
set icons true

# enable image previews with ueberzug
set previewer ~/.config/lf/lf-ueberzug-previewer
set cleaner ~/.config/lf/lf-ueberzug-cleaner

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10


# =============================================================================
#                              KEYBINDINGS
# =============================================================================

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o open
map O open


# =============================================================================
#                                FUNCIONS
# =============================================================================

# create folders
cmd mkdir %mkdir "$@"

# move current file or selected files to trash folder
cmd trash %set -f; mv $fx ~/.local/share/Trash

# open files
cmd open ${{
    case $(file --mime-type -Lb $f) in
        text/*) $EDITOR $fx ;;
        *) xdg-open $fx ;;
    esac
}}

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
